pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

--[[
computer interjects and gives assignments to find other new attachments

ship always has weapon

ideas for upgrades to ship:
1. grabber (to pick up raw materials to make into further upgrades)
2. shield (allow access to previously inaccessible region (i.e. small area where enemy fire fills area and makes it impassable))
3. mine attachment (mine material for other attachment/open up previously inaccessible area)
4. powerful light (shine in dark areas, allows access to previously inaccessible region)
5. bomb or missile to clear an otherwise inaccessible region?
]]--

function _init()
    player = init_player()
end

function _update()
    update_gravity()
    update_controls()
    update_shots()
end

function _draw()
    cls()
    draw_map()
    player_animation()
    draw_shots()
    draw_dashboard()
    debug()
    
end

function debug()
    -- **collision with wall**
    -- local x = player.x/8
    -- local y = player.y/8 
    -- print(x, 40, 20, 7)
    -- print(y, 40, 30, 7)
    -- local m = mget(x,y)
    -- print(fget(m,0),40,40,7)

    --print(#player.shots,40,20,7)
    --print(player.reload,40,20,7)
    -- for s in all(player.shots) do
    --     print(s.y,40,20,7)
    -- end
end

function init_player()
    p = {}
    p.x = 64
    p.y = 64
    p.flip = false
    p.sprite = 1
    p.burn = 0
    p.fuel = 100
    p.width = 8
    p.height = 8
    p.shots = {}
    p.reload = 1
    return p
end

function draw_dashboard()
    rectfill(0, 128, 128, 112, 1)
    draw_fuel_guage()
end

function draw_fuel_guage()
    if(player.fuel <= 0) then return end

    local amount = 39 + (player.fuel / 2)
    rectfill(39, 113, amount, 123, guage_clr())
end

function guage_clr()
    if(player.fuel < 75 and player.fuel >= 50) then return 10
    elseif(player.fuel < 50 and player.fuel >= 25) then return 9
    elseif(player.fuel < 25 and player.fuel >= 0) then return 8
    else return 11
    end
end

function draw_map()
    map(0,0, 0, 0, 16,14)
end

function draw_shots()
    for s in all(player.shots) do
        line (s.x+9, s.y+5, s.x+40, s.y+5, 7)
    end
end

function update_gravity()
    if(btn(2) and player.fuel >= 0) then
        return
    end

    --if(player.y < 104) then 
    if(not solid(player.x, player.y+player.height)) then
        player.y += 1
        player.burn -= 1
        if(player.burn < 0) then player.burn = 0 end
    else
        player.burn = 0
    end
end

function update_shots()
   for s in all(player.shots) do
        if(s.flip == true) then
            if(solid(s.x, s.y)) then
                del(player.shots, s)
            else
                s.x -= 2
            end
        else
            if(solid(s.x+40, s.y)) then
                del(player.shots, s)
            else
                s.x += 2
            end
        end
        s.frame += 1
        if(s.frame > 20) then
            del(player.shots, s)
        end
    end 
end

function update_controls()
    if (btn(0)) then 
        left()
    end
    
    if (btn(1)) then
        right()
    end

    if (btn(2)) then 
        up()
    end
    
    if (btn(3)) then 
        down()
    end

    if(btn(5)) then
        player.fuel = 100
    end

    if(btnp(4)) then
        shoot()
    end

    if(btn(4)) then
        delay_shoot()
    end
end

function left()
    if(not solid(player.x-1, player.y)) then
        player.x = player.x - 1
    end
    player.flip = true
end

function right()
    if(not solid(player.x+player.width, player.y)) then
        player.x = player.x + 1
    end
    player.flip = false
end

function up()
    if(player.fuel <= 0) then
        return
    end

    if(not solid(player.x, player.y-1)) then
        player.y = player.y - 1
    end
    
    burn_fuel()
end

function down()
    --if(player.y < 104) then
    if(not solid(player.x, player.y+player.height)) then
        player.y = player.y + 1
    end
end

function shoot()
    local shot = {}
    shot.frame = 0
    shot.x = player.x-2
    if(player.flip) then
        shot.x -= 38
    end
    shot.y = player.y
    shot.l = 40
    shot.flip = player.flip
    add(player.shots, shot)
    p.reload = 1
end

function delay_shoot()
    if(10 / p.reload == 1) then
        shoot()
    else
        p.reload += 1
    end
end

function solid(x,y)
    local m = mget(x/8,y/8)
    return fget(m,0)
end

function burn_fuel()
    player.burn += 1
    if(player.burn > 30) then player.burn = 30 end
    player.fuel -= player.burn / 100
end

function player_animation()
    spr(player.sprite, player.x, player.y, 1, 1, player.flip)
    if(player.burn > 10) then
        local burnpos = player.x - 8
        local burnflip = false
        if(player.flip == true) then 
            burnpos = player.x + 8
            burnflip = true 
        end
        spr((player.burn / 10) + 2, burnpos, player.y, 1, 1, burnflip)
    end
end

__gfx__
00000000000000006600000000000000000000000000000000000000000000000000000000000000000000000077770000000000000000000000000000000000
000000009fa00000066600000000000000000000000000009fa00000000000000000000000000000000000000780087000000000000000000000000000000000
00700700099990000d6c7000000000000000000000000000099900000000000000000000000000000000000006b00b7000000000000000000000000000000000
00077000029dc700056cc700000000000000000000000990029dc7000000000000000000000000000000000006b33b7000000000000000000000000000000000
000770008d91cc70866dcc600000009800000098000099888d91cc7000000000000000000000000000000000551111ff00000000000000000000000000000000
00700700ef9955da966666660000000000000a99000aa999ef9955da000000000000000000000000000000005551111100000000000000000000000000000000
00000000829999f9854dd4dd000000980000009800009988829999f9000000000000000000000000000000000ddcccc000000000000000000000000000000000
0000000000599f5005dff55000000000000000000000099000599f500000000000000000000000000000000000dddd0000000000000000000000000000000000
00055d670707070776d5500007070707d6767777000660000000000000000000000000008a900000000000000000000000000000000000000000000000000000
00d677660606060666776d000606060666666666006e76000000000000000000000000000ea90000000000000000000000000000000000000000000000000000
0d67666606060606666676d00606060656666666068777600000000000000000000000000ee87700000000000000000000000000000000000000000000000000
567666660606060666666765060606066666da8605887e60000000000000000000000000de881c70000000000000000000000000000000000000000000000000
56666d550505050555d66665050505055666da860058e600000000000000000000000000d8ee1117000000000000000000000000000000000000000000000000
d666d55505050505555d666d050505055666ddd60005500000000000000000000000000008eee8dd000000000000000000000000000000000000000000000000
666655dd0d0d0d0ddd5566660d0d0d0d566666670005d0000000000000000000000000000088ddd0000000000000000000000000000000000000000000000000
766655d0000000000d5566670000000055dddd550005d00000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666770000000000000000ddd667770005d00000bbbb00000000000900000000000000000000000000000000000000000000000000000000000000
766655d0560005d00d556667000005ddd66666670005d0000b0b00b0000000000887000000000000000000000000000000000000000000000000000000000000
0000000005655d00000000000000dd55666666660005d0000bbb00b000000000088c700000000000000000000000000000000000000000000000000000000000
766655d0005670000d556667000d555d566666660005d00000bbbb0000000000988cc70000000000000000000000000000000000000000000000000000000000
00000000005d60000000000000d555d6566666660005d000000bb000000000008888888000000000000000000000000000000000000000000000000000000000
766655d005d056000d55666705d55d66566666660005d000000bb00000000000a8888e8800000000000000000000000000000000000000000000000000000000
000000005d500560000000000d55dd66566666660005d000003303000000000008edd48000000000000000000000000000000000000000000000000000000000
766655d0dd6666660d5566670d5dd6675556566d0005d00003303330000000000099980000000000000000000000000000000000000000000000000000000000
766655d0000000000d55666700000000000000000000000000000000000000000000000000000000000000009900000000000000000000000000000000000000
666655ddd0d0d0d0dd556666000000000000000000000000000000000000000000000000000000000000000009a9000000000000000000000000000000000000
d766d55550505050555d666d00000000000000000000000000000000000000000000000000000000000000000f9c700000000000000000000000000000000000
57666d555050505055d6666500000000000000000000000000000000000000000000000000000000000000000d9cc70000000000000000000000000000000000
5676666660606060666667650000000000000000000000000000000000000000000000000000000000000000899dcca000000000000000000000000000000000
0d67666660606060666676d00000000000000000000000000000000000000000000000000000000000000000a999999900000000000000000000000000000000
00d666666060606066776d0000000000000000000000000000000000000000000000000000000000000000008de99e6d00000000000000000000000000000000
00055d677070707076d5500000000000000000000000000000000000000000000000000000000000000000000059ad5000000000000000000000000000000000
__gff__
0000000000000000000000000000000001010100000000000000000000000000010101010000000000000000000000000101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1013111111111111111111111111111200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000241400002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000002400002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2021212121212121000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000023313131313131313131313200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
